Packet structure 

packet structure changes based on msg_type

+---------------------------+
|      msg_type == 0        |
|        (2 Octets)         |
+---------------------------+
|          level            |
|        (4 Octets)         |
+---------------------------+
|         category          |
|        (32 Octets)        |
+---------------------------+
|        process id         |
|        (4 Octets)         |
+---------------------------+
|        thread id          |
|        (4 Octets)         |
+---------------------------+
|         procname          |
|        (16 Octets)        |
+---------------------------+
|        threadname         |
|        (16 Octets)        |
+---------------------------+
| class_name or source file |
|        (32 Octets)        |
+---------------------------+
|  method or function name  |
|        (32 Octets)        |
+---------------------------+
|       line number         |
|        (4 Octets)         |
+---------------------------+
|      sequence number      |
|        (4 Octets)         |
+---------------------------+
|         debugtext         |
|        ( x Octets)        |
.                           .
.                           .
+---------------------------+
|           null            |
|        (1 Octets)         |
+---------------------------+


+---------------------------+
|      msg_type == 1        |
|        (2 Octets)         |
+---------------------------+
|          level            |
|        (4 Octets)         |
+---------------------------+
|         category          |
|        (32 Octets)        |
+---------------------------+
|          src_ip           |
|        (16 Octets)        |
+---------------------------+
|         src_port          |
|        (2 Octets)         |
+---------------------------+
|          dst_ip           |
|        (16 Octets)        |
+---------------------------+
|         dst_port          |
|        (2 Octets)         |
+---------------------------+
|        process id         |
|        (4 Octets)         |
+---------------------------+
|        thread id          |
|        (4 Octets)         |
+---------------------------+
|         procname          |
|        (16 Octets)        |
+---------------------------+
|        threadname         |
|        (16 Octets)        |
+---------------------------+
|         <ignore>          |
|        (36 Octets)        |
+---------------------------+
|        sip package        |
|        ( x Octets)        |
.                           .
.                           .
+---------------------------+
|           null            |
|        (1 Octets)         |
+---------------------------+



ï»¿Each package starts with a message header followed by the payload and
a 0 byte. 

The message header currently has a fixed width of 150 bytes. 

For the future the length of the header might change based on the msg_type.
(This will allow for less waste compared to the fix length)

Whenever the content structure of the message or length of header is changed 
a new msg_type will be used.

All multi-byte fields with integral vallues are little-endian.

The msg_type field contains a value that is one of:

* 0, for a debug text message;
* 1, for a SIP packet message.

The level field contains a value that is one of:

* 0 = "Off";
* 1 = "Error";
* 2 = "Warning";
* 3 = "Info";
* 4 = "Debug";
* 5 = "EDebug";
* 6 = "XDebug".

The cateory field is an ASCII string.

In a debug text message:

The process id field is the UN*X/Windows process ID of the process
that is logging the message.

The thread id field is the UN*X/Windows thread ID for the thread, within
that process, that is logging the message.

The procname field is an ASCII string giving the internal name of the
process indicated by the process id field.

The threadname field is an ASCII string giving the name of the thread
indicated by the thread id field, if it was was given a name for
clarity; it is frequently empty.

The class_name or source file field is an ASCII string giving the class
name, for C++ code, or source code file name, for C code, of the code
that is logging the message.

The method or function name field is an ASCII string giving the method
name, for C++ code, or function name, for C code, of the code that is
logging the message.

The line number field is the source file line number that is logging the
message.

The sequence number field is a number that is increased each time a log
line is prpared internally.  If a sequence number is missing, it is
usually due to performance problems during logging.

The debugtext field is an ASCII string that runs to the end of the data,
with a one-octet null byte at the end.

In a SIP packet message:

The src_ip field is the IPv6 address from which the SIP packet was sent.

The src_port field is the port from which the SIP packet was sent.

The dst_ip field is the IPv6 address of the host to which the SIP packet
was sent.

The dst_port is the port to which the SIP packet was sent.

The <ignore> field is 76 octets of padding; they should be ignored.

The SIP package field is the contents of the SIP packet.  It runs to the
end of the data, with a one-octet null byte at the end.
